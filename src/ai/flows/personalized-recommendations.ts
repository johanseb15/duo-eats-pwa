// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A personalized food recommendation AI agent.
 *
 * - getPersonalizedRecommendations - A function that handles the personalized food recommendation process.
 * - PersonalizedRecommendationsInput - The input type for the getPersonalizedRecommendations function.
 * - PersonalizedRecommendationsOutput - The return type for the getPersonalizedRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PersonalizedRecommendationsInputSchema = z.object({
  userOrderHistory: z
    .string()
    .describe(
      'A string containing the user order history. Example: [\"Pizza\", \"Burger\", \"Salad\"]'
    ),
  userPreferences: z
    .string()
    .describe(
      'A string containing the user food preferences. Example: [\"Spicy\", \"Vegetarian\", \"Italian\"]'
    ),
});
export type PersonalizedRecommendationsInput = z.infer<
  typeof PersonalizedRecommendationsInputSchema
>;

const PersonalizedRecommendationsOutputSchema = z.object({
  recommendations: z
    .string()
    .describe(
      'A string containing the personalized food recommendations. Example: [\"Pasta Arrabiata\", \"Spicy Burger\", \"Vegetarian Pizza\"]'
    ),
});
export type PersonalizedRecommendationsOutput = z.infer<
  typeof PersonalizedRecommendationsOutputSchema
>;

export async function getPersonalizedRecommendations(
  input: PersonalizedRecommendationsInput
): Promise<PersonalizedRecommendationsOutput> {
  return personalizedRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'personalizedRecommendationsPrompt',
  input: {schema: PersonalizedRecommendationsInputSchema},
  output: {schema: PersonalizedRecommendationsOutputSchema},
  prompt: `You are a food recommendation expert. Based on the user's order history and food preferences, you will provide personalized food recommendations.

User Order History: {{{userOrderHistory}}}
User Preferences: {{{userPreferences}}}

Recommendations:`,
});

const personalizedRecommendationsFlow = ai.defineFlow(
  {
    name: 'personalizedRecommendationsFlow',
    inputSchema: PersonalizedRecommendationsInputSchema,
    outputSchema: PersonalizedRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
